use crate::ast::Call;

grammar;

pub File: Vec<Call> = {
    "SOI" <calls:CallList> "EOI" => calls,
};

CallList: Vec<Call> = {
    <first:Call> "," <rest:CallList> => {
        let mut v = vec![first];
        v.extend(rest);
        v
    },
    <only:Call> => vec![only],
};

Call: Call = {
    <name:Ident> "(" <args:ArgList> ")" => Call { name, args },
};

ArgList: Vec<Call> = {
    <first:Call> "," <rest:ArgList> => {
        let mut v = vec![first];
        v.extend(rest);
        v
    },
    <only:Call> => vec![only],
    => vec![],
};

Ident: String = {
    <s:r"[a-zA-Z_][a-zA-Z0-9_]*"> => s.to_string(),
};
